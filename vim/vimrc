set nocompatible              " be iMproved, required
filetype off                  " required
call plug#begin('~/.vim/plugged')
Plug 'raimondi/delimitmate'
Plug 'tikhomirov/vim-glsl'
Plug 'alvan/vim-closetag'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'SirVer/ultisnips'
Plug 'nacitar/a.vim'
Plug 'nelstrom/vim-visual-star-search'
Plug 'rhysd/vim-clang-format'
Plug 'bronson/vim-trailing-whitespace'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
" All of your Plugs must be added before the following line
call plug#end()            " required
""""""""""Vim config""""""""""
    set ignorecase
    set smartcase
    set autochdir
    syntax on
    if strftime("%H") >= 8 && strftime("%H") < 19
      set background=light
    else
      set background=dark
    endif
    colorscheme ez
    set cursorline
    filetype plugin indent on    " required
    filetype plugin on
    "makes backspace work like most other apps
    set backspace=indent,eol,start
    "Set color for column 80th
    set cc=80
    set encoding=utf-8
    set expandtab
    "Enable switching between tabs without saving
    set foldmethod=manual
    set hidden
    set incsearch
    set notimeout
    " Show line, column number
    set ruler
    "identation tab
    set shiftwidth=2
    "makes the backspace key treat the spaces like a tab
    set softtabstop=2
    set tabstop=2
    set termguicolors
    set wildcharm=<Tab>
    set wildmenu
    set wildmode=longest:full,full
    "X11 clipboard
    if has("unix")
        set clipboard=unnamedplus
    elseif has("win32")
        set clipboard=unnamed
    endif
    "window default size
    if has('gui_running')
        set columns=100
    endif
    "Color scheme
    if has("unix")
        set t_8f=[38;2;%lu;%lu;%lum
        set t_8b=[48;2;%lu;%lu;%lum
    endif

    "set gui font
    if has('gui_running')
        if has("unix")
            set guifont=DejaVu\ Sans\ Mono\ 12
        elseif has("win32")
            set guifont=Consolas:h12:cANSI
        endif
        set guioptions-=L
        set guioptions-=m
        set guioptions-=r
        set guioptions-=T
    endif
    set laststatus=2
    set statusline=(%t)
    set statusline+=\ (%{&ff})
    set statusline+=\ (%F)
    set statusline+=\ (%Y)
    set statusline+=\ (%l:%c)
    " Shortcuts
        " Switch between buffers
        nnoremap <silent> <C-q>o :b#<CR>
        vnoremap <silent> <C-q>o <C-c>:b#<CR>
        inoremap <silent> <C-q>o <C-o>:b#<CR>
        " Press Space to turn off highlighting and clear any message already displayed.
        noremap <Space> :set hlsearch! hlsearch?<CR>
        "map Ctrl-S to save
        nnoremap <silent> <C-s> :update<CR>
        vnoremap <silent> <C-s> <C-c>:update<CR>
        inoremap <silent> <C-s> <C-o>:update<CR>
        "Set Leader key
        let mapleader="\<Space>"
        noremap <leader>h <C-W>h<CR>
        noremap <leader>j <C-W>j<CR>
        noremap <leader>k <C-W>k<CR>
        noremap <leader>l <C-W>l<CR>

""""""""""utilsnips""""""""""
    let g:UltiSnipsExpandTrigger="<c-k>"
    let g:UltiSnipsJumpBackwardTrigger="<c-j>"
    let g:UltiSnipsJumpForwardTrigger="<c-k>"

""""""""""vim-indent-guides""""""""""
    let g:indent_guides_enable_on_vim_startup = 1

""""""""""A""""""""""
    nnoremap <silent> <C-q>s :A<CR>
    vnoremap <silent> <C-q>s <C-c>:A<CR>
    inoremap <silent> <C-q>s <C-o>:A<CR>

""""""""""vim-clang-format""""""""""
    autocmd FileType c,cpp,objc nnoremap <buffer><Leader>f :<C-u>ClangFormat<CR>
    autocmd FileType c,cpp,objc vnoremap <buffer><Leader>f :ClangFormat<CR>

""""""""""fzf""""""""""
    nnoremap <C-q>p :GFiles<CR>
    vnoremap <C-q>p <C-c>:GFiles<CR>
    inoremap <C-q>p <C-o>:GFiles<CR>
    nnoremap <C-q>e :Files .
    vnoremap <C-q>e <C-c>:Files .
    inoremap <C-q>e <C-o>:Files .
    nnoremap <C-q>l :Buffers<CR>
    vnoremap <C-q>l <C-c>:Buffers<CR>
    inoremap <C-q>l <C-o>:Buffers<CR>
    nnoremap <C-q>r :History<CR>
    vnoremap <C-q>r <C-c>:History<CR>
    inoremap <C-q>r <C-o>:History<CR>
    let g:fzf_colors =
    \ { 'fg':      ['fg', 'Normal'],
      \ 'bg':      ['bg', 'Normal'],
      \ 'hl':      ['fg', 'Comment'],
      \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
      \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
      \ 'hl+':     ['fg', 'Statement'],
      \ 'info':    ['fg', 'PreProc'],
      \ 'border':  ['fg', 'Ignore'],
      \ 'prompt':  ['fg', 'Conditional'],
      \ 'pointer': ['fg', 'Exception'],
      \ 'marker':  ['fg', 'Keyword'],
      \ 'spinner': ['fg', 'Label'],
      \ 'header':  ['fg', 'Comment'] }
